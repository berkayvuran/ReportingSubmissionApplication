-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.reports
(
    id integer NOT NULL,
    sector_id integer NOT NULL,
    business_family_id integer NOT NULL,
    brand_id integer NOT NULL,
    model_id integer NOT NULL,
    fault_code_id integer NOT NULL,
    photo_url_id integer NOT NULL,
    user_id integer NOT NULL,
    create_date date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sectors
(
    id integer NOT NULL,
    name "char" NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.business_families
(
    id integer NOT NULL,
    sector_id integer NOT NULL,
    name "char" NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.brands
(
    id integer NOT NULL,
    business_family_id integer NOT NULL,
    name "char" NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.models
(
    id integer NOT NULL,
    brand_id integer NOT NULL,
    name "char" NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL,
    e_mail "char" NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.photos
(
    id integer NOT NULL,
    url "char" NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.fault_codes
(
    id integer NOT NULL,
    name "char" NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.fault_codes_reports
(
    fault_codes_id integer NOT NULL,
    reports_fault_code_id integer NOT NULL
);

ALTER TABLE IF EXISTS public.sectors
    ADD FOREIGN KEY (id)
    REFERENCES public.reports (sector_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sectors
    ADD FOREIGN KEY (id)
    REFERENCES public.business_families (sector_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.business_families
    ADD FOREIGN KEY (id)
    REFERENCES public.reports (business_family_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.business_families
    ADD FOREIGN KEY (id)
    REFERENCES public.brands (business_family_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.brands
    ADD FOREIGN KEY (id)
    REFERENCES public.reports (brand_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.brands
    ADD FOREIGN KEY (id)
    REFERENCES public.models (brand_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.models
    ADD FOREIGN KEY (id)
    REFERENCES public.reports (model_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.users
    ADD FOREIGN KEY (id)
    REFERENCES public.reports (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.photos
    ADD FOREIGN KEY (id)
    REFERENCES public.reports (photo_url_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.fault_codes_reports
    ADD FOREIGN KEY (fault_codes_id)
    REFERENCES public.fault_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.fault_codes_reports
    ADD FOREIGN KEY (reports_fault_code_id)
    REFERENCES public.reports (fault_code_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;